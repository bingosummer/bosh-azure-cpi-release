---
groups:
  - name: bosh-azure-cpi-release
    jobs:
      - build-candidate
      - integration-unmanaged-disks
      - integration-managed-disks
      - integration-windows-unmanaged-disks
      - integration-windows-managed-disks
      - bats-unmanaged-disks
      - bats-managed-disks

shared:
  - &azure-environment-params
    AZURE_ENVIRONMENT:                    {{azure_environment}}
    AZURE_TENANT_ID:                      {{azure_tenant_id}}
    AZURE_SUBSCRIPTION_ID:                {{azure_subscription_id}}
    AZURE_CLIENT_ID:                      {{azure_client_id}}
    AZURE_CLIENT_SECRET:                  {{azure_client_secret}}
    AZURE_CERTIFICATE:                    {{azure_certificate}}

  - &create-bats-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: pipelines/azure/assets/terraform

  - &create-az-bats-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform/az_bats

  - &destroy-bats-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: pipelines/azure/assets/terraform
    get_params:
      action: destroy

  - &destroy-az-bats-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: bosh-cpi-src/ci/assets/terraform/az_bats
    get_params:
      action: destroy

  - &prepare-director
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params: &prepare-director-params
      INFRASTRUCTURE:     azure
      DIRECTOR_VARS_FILE: {{azure_director_vars_file}}

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml
    params: &run-bats-params
      INFRASTRUCTURE:                     azure
      STEMCELL_NAME:                      bosh-azure-hyperv-ubuntu-trusty-go_agent
      BAT_INFRASTRUCTURE:                 azure
      BAT_NETWORKING:                     manual
      BAT_RSPEC_FLAGS:                    "--tag ~raw_ephemeral_storage"

  - &run-az-bats
    task: run-az-bats
    file: bosh-cpi-src/ci/tasks/run-az-bats.yml
    params: &run-az-bats-params
      INFRASTRUCTURE:                     azure
      STEMCELL_NAME:                      bosh-azure-hyperv-ubuntu-trusty-go_agent
      BAT_INFRASTRUCTURE:                 azure
      BAT_NETWORKING:                     manual
      BAT_RSPEC_FLAGS:                    "--tag ~raw_ephemeral_storage"
      AZURE_BATS_ZONE:                    {{azure_bats_zone}}

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml

  - &create-integration-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform/integration

  - &destroy-integration-environment
    put: environment
    params:
      action: destroy
      env_name_file: environment/name
      terraform_source: bosh-cpi-src/ci/assets/terraform/integration
    get_params:
      action: destroy

  - &upload-stemcell
    task: upload-stemcell
    file: bosh-cpi-src/ci/tasks/upload-stemcell.yml
    params: &upload-stemcell-params
      <<: *azure-environment-params

  - &run-integration
    task: run-integration
    file: bosh-cpi-src/ci/tasks/run-integration.yml
    params: &run-integration-params
      <<: *azure-environment-params
      SSH_PUBLIC_KEY:                                 {{ssh_public_key}}

  - &run-integration-windows
    task: run-integration-windows
    file: bosh-cpi-src/ci/tasks/run-integration-windows.yml
    params: &run-integration-windows-params
      <<: *run-integration-params

  - &ensure-cleanup
    task: ensure-cleanup
    file: bosh-cpi-src/ci/tasks/ensure-cleanup.yml
    params:
      <<: *azure-environment-params

jobs:
  - name: build-candidate
    serial: true
    plan:
      - aggregate:
        - {trigger: true,  get: trigger-every-week}
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false, get: version-semver, params: {bump: patch}}
        - {trigger: false, get: bosh-cli}
      - put: version-semver
        params: {file: version-semver/number}
      - task: build
        file: bosh-cpi-src/ci/tasks/build-candidate.yml
      - put: bosh-cpi-dev-artifacts
        params: {file: candidate/*.tgz}

  - name: integration-unmanaged-disks
    serial: true
    plan:
      - aggregate:
        - {get: bosh-cpi-release, trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-cpi-src,     trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,         trigger: false, resource: azure-ubuntu-stemcell}
      - <<: *create-integration-environment
      - do:
        - <<: *upload-stemcell
        - <<: *run-integration
          params:
            <<: *run-integration-params
            AZURE_USE_MANAGED_DISKS: false
        ensure:
          do:
            - <<: *destroy-integration-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: integration-managed-disks
    serial: true
    plan:
      - aggregate:
        - {get: bosh-cpi-release, trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-cpi-src,     trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,         trigger: false, resource: azure-ubuntu-stemcell}
      - <<: *create-integration-environment
      - do:
        - <<: *upload-stemcell
        - <<: *run-integration
          params:
            <<: *run-integration-params
            AZURE_USE_MANAGED_DISKS: true
        ensure:
          do:
            - <<: *destroy-integration-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: integration-windows-unmanaged-disks
    serial: true
    plan:
      - aggregate:
        - {get: bosh-cpi-release, trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-cpi-src,     trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,         trigger: false, resource: azure-windows-stemcell}
      - <<: *create-integration-environment
      - do:
        - <<: *upload-stemcell
          params:
            <<: *azure-environment-params
            IS_HEAVY_STEMCELL: false
        - <<: *run-integration-windows
          params:
            <<: *run-integration-windows-params
            AZURE_USE_MANAGED_DISKS: false
        ensure:
          do:
            - <<: *destroy-integration-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: integration-windows-managed-disks
    serial: true
    plan:
      - aggregate:
        - {get: bosh-cpi-release, trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-cpi-src,     trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,         trigger: false, resource: azure-windows-stemcell}
      - <<: *create-integration-environment
      - do:
        - <<: *upload-stemcell
          params:
            <<: *azure-environment-params
            IS_HEAVY_STEMCELL: false
        - <<: *run-integration-windows
          params:
            <<: *run-integration-windows-params
            AZURE_USE_MANAGED_DISKS: true
        ensure:
          do:
            - <<: *destroy-integration-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: bats-unmanaged-disks
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-release,    trigger: false, resource: bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,        trigger: false, resource: azure-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
      - <<: *create-bats-environment
      - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE: |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        - do:
          - <<: *deploy-director
          - <<: *run-bats
          ensure:
            do:
              - <<: *teardown
        ensure:
          do:
            - <<: *destroy-bats-environment
          ensure:
            do:
              - <<: *ensure-cleanup

  - name: bats-managed-disks
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [build-candidate]}
        - {get: bosh-release,    trigger: false, resource: bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,        passed: [build-candidate]}
        - {get: stemcell,        trigger: false, resource: azure-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
      - <<: *create-az-bats-environment
      - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE: |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o bosh-deployment/azure/use-managed-disks.yml
        - do:
          - <<: *deploy-director
          - <<: *run-az-bats
          ensure:
            do:
              - <<: *teardown
        ensure:
          do:
            - <<: *destroy-az-bats-environment
          ensure:
            do:
              - <<: *ensure-cleanup

resource_types:
  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: beta-backend
  - name: azure-blob
    type: docker-image
    source:
      repository: cfcloudops/azure-blobstore-concourse-resource

resources:
  - name: bosh-cpi-dev-artifacts
    type: azure-blob
    source:
      storage_account_name: {{storage_account_name}}
      storage_access_key:   {{storage_account_access_key}}
      container:            {{dev_artifacts_container_name}}
      regexp: bosh-azure-cpi-(\d+\.\d+\.\d+)\.tgz
  - name: bosh-cpi-src-in
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release.git
      branch: develop
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
  - name: version-semver
    type: git
    source:
      file:        current-version # dev-release version
      uri:         {{version_semver_repo_uri}}
      branch:      {{version_semver_repo_branch}}
      private_key: {{version_semver_repo_private_key}}
  - name: environment
    type: terraform_type
    source:
      backend_type: azurerm
      backend_config:
      storage:
        storage_account_name: {{storage_account_name}}
        container_name: {{environment_container_name}}
        key: terraform.tfstate
        access_key: {{storage_account_access_key}}
        environment: public
      vars:
        location:              {{azure_location}}
        azure_environment:     {{azure_environment}}
        azure_subscription_id: {{azure_subscription_id}}
        azure_client_id:       {{azure_client_id}}
        azure_client_secret:   {{azure_client_secret}}
        azure_tenant_id:       {{azure_tenant_id}}
        resource_group_prefix: {{resource_group_prefix}}
  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: master
  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh
  - name: azure-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-ubuntu-trusty-go_agent
  - name: azure-windows-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-azure-hyperv-windows2012R2-go_agent
  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master
  - name: trigger-every-week
    type: time
    source:
      start: 12:00 AM
      stop: 1:00 AM
      days: [Sunday]
      location: Asia/Shanghai
